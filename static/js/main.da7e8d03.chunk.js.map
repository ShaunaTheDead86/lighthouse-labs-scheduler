{"version":3,"sources":["components/DayListItem.js","components/DayList.js","components/Appointment/Header.js","components/Appointment/Show.js","components/Appointment/Empty.js","components/InterviewerListItem.js","components/InterviewerList.js","components/Button.js","components/Appointment/Form.js","components/Appointment/Status.js","components/Appointment/Confirm.js","components/Appointment/Error.js","components/Appointment/index.js","hooks/useVisualMode.js","components/Application.js","hooks/useApplicationData.js","helpers/selectors.js","index.js"],"names":["DayListItem","props","spots","dayClass","classNames","day-list__item--selected","selected","day-list__item--full","react_default","a","createElement","className","onClick","setDay","name","data-testid","DayList","parsedDayList","days","map","day","key","id","value","onChange","Header","time","Show","student","interviewer","src","alt","onEdit","onDelete","Empty","onAdd","InterviewerListItem","interviewerClass","interviewers__item--selected","setInterviewer","avatar","InterviewerList","interviewerList","interviewers","Button","buttonClass","button--confirm","confirm","button--danger","danger","disabled","children","Form","_useState","useState","_useState2","Object","slicedToArray","setStudent","_useState3","_useState4","_useState5","_useState6","error","setError","autoComplete","onSubmit","event","preventDefault","type","placeholder","target","components_InterviewerList","interview","Button_Button","onCancel","onSave","Confirm","message","onConfirm","onClose","Appointment","EMPTY","SHOW","SAVING","DELETING","ERROR_SAVE","ERROR_DELETE","_useVisualMode","initialMode","mode","setMode","history","setHistory","transition","newMode","replace","prev","concat","toConsumableArray","slice","back","length","useVisualMode","queueSave","bookInterview","then","res","catch","err","Confirm_Confirm","cancelInterview","Error_Confirm","Application","_useApplicationData","appointments","state","setState","updateSpots","add","objectSpread","useEffect","Promise","all","axios","get","data","appointment","defineProperty","put","delete","useApplicationData","schedule","currentDay","find","stateDay","getAppointmentsForDay","results","values","filter","stateInterviewer","getInterview","day_name","getInterviewersForDay","ReactDOM","render","Application_Application","document","getElementById"],"mappings":"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","file":"static/js/main.da7e8d03.chunk.js","sourcesContent":["import React from 'react'\nimport classNames from 'classnames'\nimport 'components/dayListItem.scss'\n\nfunction formatSpots (spots) {\n  if (spots === 0) {\n    return 'no spots remaining'\n  }\n\n  if (spots === 1) {\n    return spots + ' spot remaining'\n  }\n\n  return spots + ' spots remaining'\n}\n\nexport default function DayListItem (props) {\n  const dayClass = classNames('day-list__item', {\n    'day-list__item--selected': props.selected,\n    'day-list__item--full': !props.spots\n  })\n\n  return (\n    <li\n      className={dayClass}\n      onClick={() => props.setDay(props.name)}\n      selected={props.selected}\n      data-testid={props.name}\n\t\t>\n      <h2 className='text--regular'>\n        {props.name}\n      </h2>\n      <h3 className='text--light'>\n        {formatSpots(props.spots)}\n      </h3>\n    </li>\n  )\n}\n","import React from 'react'\nimport DayListItem from './DayListItem'\n\nexport default function DayList (props) {\n  const parsedDayList = props.days.map(day =>\n    <DayListItem\n      key={day.id}\n      name={day.name}\n      spots={day.spots}\n      selected={day.name === props.value}\n      setDay={props.onChange}\n\t\t/>\n\t)\n\n  return (\n    <ul>\n      {parsedDayList}\n    </ul>\n  )\n}\n","import React from 'react'\n\nexport default function Header (props) {\n  return (\n    <header className='appointment__time'>\n      <h4 className='text--semi-bold'>\n        {props.time}\n      </h4>\n      <hr className='appointment__separator' />\n    </header>\n  )\n}\n","import React from 'react'\n\nexport default function Show (props) {\n  return (\n    <main className='appointment__card appointment__card--show'>\n      <section className='appointment__card-left'>\n        <h2 className='text--regular'>\n          {props.student}\n        </h2>\n        <section className='interviewer'>\n          <h4 className='text--light'>Interviewer</h4>\n          <h3 className='text--regular'>\n            {props.interviewer.name}\n          </h3>\n        </section>\n      </section>\n      <section className='appointment__card-right'>\n        <section className='appointment__actions'>\n          <img\n            className='appointment__actions-button'\n            src='images/edit.png'\n            alt='Edit'\n            onClick={props.onEdit}\n\t\t\t\t\t/>\n          <img\n            className='appointment__actions-button'\n            src='images/trash.png'\n            alt='Delete'\n            onClick={props.onDelete}\n\t\t\t\t\t/>\n        </section>\n      </section>\n    </main>\n  )\n}\n","import React from 'react'\n\nexport default function Empty (props) {\n  return (\n    <main className='appointment__add'>\n      <img\n        className='appointment__add-button'\n        src='images/add.png'\n        alt='Add'\n        onClick={props.onAdd}\n\t\t\t/>\n    </main>\n  )\n}\n","import React from 'react'\nimport classNames from 'classnames'\n\nimport 'components/interviewerListItem.scss'\n\nexport default function InterviewerListItem (props) {\n  const interviewerClass = classNames('interviewers__item', {\n    'interviewers__item--selected': props.selected\n  })\n\n  return (\n    <li className={interviewerClass} onClick={props.setInterviewer}>\n      <img\n        className='interviewers__item-image'\n        src={props.avatar}\n        alt={props.name}\n\t\t\t/>\n      {props.selected ? props.name : ''}\n    </li>\n  )\n}\n","import React from 'react'\nimport InterviewerListItem from 'components/InterviewerListItem'\nimport PropTypes from 'prop-types'\nimport 'components/interviewerList.scss'\n\nfunction InterviewerList (props) {\n  const interviewerList = props.interviewers.map(interviewer =>\n    <InterviewerListItem\n      key={interviewer.id}\n      name={interviewer.name}\n      avatar={interviewer.avatar}\n      selected={interviewer.id === props.value}\n      setInterviewer={() => props.onChange(interviewer.id)}\n\t\t/>\n\t)\n\n  return (\n    <section className='interviewers'>\n      <h4 className='interviewers__header text--light'>Interviewer</h4>\n      <ul className='interviewers__list'>\n        {interviewerList}\n      </ul>\n    </section>\n  )\n}\n\nInterviewerList.propTypes = {\n  interviewers: PropTypes.array.isRequired\n}\n\nexport default InterviewerList\n","import React from 'react'\nimport classNames from 'classnames'\n\nimport 'components/Button.scss'\n\nexport default function Button (props) {\n  const buttonClass = classNames('button', {\n    'button--confirm': props.confirm,\n    'button--danger': props.danger\n  })\n\n  return (\n    <button\n      className={buttonClass}\n      onClick={props.onClick}\n      disabled={props.disabled}\n\t\t>\n      {props.children}\n    </button>\n  )\n}\n","import React, { useState } from 'react'\nimport InterviewerList from 'components/InterviewerList'\nimport Button from 'components/Button'\n\nexport default function Form (props) {\n  const [student, setStudent] = useState(props.student || '')\n  const [interviewer, setInterviewer] = useState(props.interviewer || null)\n  const [error, setError] = useState('')\n\n  function reset () {\n    setStudent('')\n    setInterviewer('')\n  }\n\n  function cancel () {\n    reset()\n    setError('')\n    props.onCancel()\n  }\n\n  function validate () {\n    if (student === '') {\n      setError('Student name cannot be blank')\n      return\n    }\n\n    if (interviewer === null) {\n      setError('You must choose an interviewer')\n      return\n    }\n\n    setError('')\n    props.onSave(student, interviewer)\n  }\n\n  return (\n    <main className='appointment__card appointment__card--create'>\n      <section className='appointment__card-left'>\n        <form autoComplete='off' onSubmit={event => event.preventDefault()}>\n          <input\n            className='appointment__create-input text--semi-bold'\n            name='name'\n            type='text'\n            placeholder='Enter Student Name'\n            value={student}\n            onChange={event => setStudent(event.target.value)}\n            data-testid='student-name-input'\n\t\t\t\t\t/>\n          <section className='appointment__validation'>\n            {error}\n          </section>\n        </form>\n        <InterviewerList\n          interviewers={props.interviewers}\n          value={interviewer}\n          onChange={setInterviewer}\n          interview={props.interview}\n\t\t\t\t/>\n      </section>\n      <section className='appointment__card-right'>\n        <section className='appointment__actions'>\n          <Button onClick={cancel} danger>\n\t\t\t\t\t\tCancel\n\t\t\t\t\t</Button>\n          <Button onClick={() => validate()} confirm>\n\t\t\t\t\t\tSave\n\t\t\t\t\t</Button>\n        </section>\n      </section>\n    </main>\n  )\n}\n","import React from 'react'\n\nexport default function Confirm (props) {\n  return (\n    <main className='appointment__card appointment__card--status'>\n      <img\n        className='appointment__status-image'\n        src='images/status.png'\n        alt='Loading'\n\t\t\t/>\n      <h1 className='text--semi-bold'>\n        {props.message}\n      </h1>\n    </main>\n  )\n}\n","import React from 'react'\nimport Button from 'components/Button'\n\nexport default function Confirm (props) {\n  return (\n    <main className='appointment__card appointment__card--confirm'>\n      <h1 className='text--semi-bold'>\n        {props.message}\n      </h1>\n      <section className='appointment__actions'>\n        <Button onClick={props.onCancel} danger>\n\t\t\t\t\tCancel\n\t\t\t\t</Button>\n        <Button onClick={props.onConfirm} danger>\n\t\t\t\t\tConfirm\n\t\t\t\t</Button>\n      </section>\n    </main>\n  )\n}\n","import React from 'react'\n\nexport default function Confirm (props) {\n  return (\n    <main className='appointment__card appointment__card--error'>\n      <section className='appointment__error-message'>\n        <h1 className='text--semi-bold'>Error</h1>\n        <h3 className='text--light'>\n          {props.message}\n        </h3>\n      </section>\n      <img\n        className='appointment__error-close'\n        src='images/close.png'\n        alt='Close'\n        onClick={props.onClose}\n\t\t\t/>\n    </main>\n  )\n}\n","import React from 'react'\nimport Header from 'components/Appointment/Header'\nimport Show from 'components/Appointment/Show'\nimport Empty from 'components/Appointment/Empty'\nimport Form from 'components/Appointment/Form'\nimport Status from 'components/Appointment/Status'\nimport Confirm from 'components/Appointment/Confirm'\nimport Error from 'components/Appointment/Error'\nimport useVisualMode from 'hooks/useVisualMode'\n\nimport 'components/Appointment/styles.scss'\n\nexport default function Appointment (props) {\n  const EMPTY = 'EMPTY'\n  const SHOW = 'SHOW'\n  const CREATE = 'CREATE'\n  const EDIT = 'EDIT'\n  const SAVING = 'SAVING'\n  const DELETING = 'DELETING'\n  const CONFIRM = 'CONFIRM'\n  const ERROR_SAVE = 'ERROR_SAVE'\n  const ERROR_DELETE = 'ERROR_DELETE'\n\n  const { mode, transition, back } = useVisualMode(\n\t\tprops.interview ? SHOW : EMPTY\n\t)\n\n  function queueSave (name, interviewer) {\n    const interview = {\n      student: name,\n      interviewer\n    }\n\n    transition(SAVING)\n\n    props\n\t\t\t.bookInterview(props.id, interview)\n\t\t\t.then(res => transition(SHOW))\n\t\t\t.catch(err => transition(ERROR_SAVE, true))\n  }\n\n  function queueDelete (id) {\n    transition(DELETING, true)\n\n    props\n\t\t\t.cancelInterview(id)\n\t\t\t.then(res => transition(EMPTY))\n\t\t\t.catch(err => transition(ERROR_DELETE, true))\n  }\n\n  return (\n    <article className='appointment'>\n      <Header time={props.time} />\n      {mode === EMPTY && <Empty onAdd={() => transition(CREATE)} />}\n      {mode === SHOW &&\n      <Show\n        student={props.interview !== null ? props.interview.student : ''}\n        interviewer={\n\t\t\t\t\t\tprops.interview !== null ? props.interview.interviewer : ''\n\t\t\t\t\t}\n        onDelete={() => transition(CONFIRM)}\n        onEdit={() => transition(EDIT)}\n\t\t\t\t/>}\n      {mode === CREATE &&\n      <Form\n        interviewers={props.interviewers}\n        onCancel={() => back()}\n        onSave={queueSave}\n\t\t\t\t/>}\n      {mode === EDIT &&\n      <Form\n        student={props.interview.student}\n        interviewer={props.interview.interviewer.id}\n        interviewers={props.interviewers}\n        onCancel={() => back()}\n        onSave={queueSave}\n\t\t\t\t/>}\n      {mode === SAVING && <Status message='Saving' />}\n      {mode === DELETING && <Status message='Deleting' />}\n      {mode === CONFIRM &&\n      <Confirm\n        message='Are you sure you would like to delete?'\n        onConfirm={() => queueDelete(props.id)}\n        onCancel={() => back()}\n\t\t\t\t/>}\n      {mode === ERROR_SAVE &&\n      <Error\n        message='There was an error while saving'\n        onClose={() => back()}\n\t\t\t\t/>}\n      {mode === ERROR_DELETE &&\n      <Error\n        message='There was an error while deleting'\n        onClose={() => back()}\n\t\t\t\t/>}\n    </article>\n  )\n}\n","import { useState } from 'react'\n\nexport default function useVisualMode (initialMode) {\n  const [mode, setMode] = useState(initialMode)\n  const [history, setHistory] = useState([initialMode])\n\n\t// a function for transitioning between modes and tracking the history\n  function transition (newMode, replace) {\n\t\t// first, set the new mode\n    setMode(newMode)\n\n\t\t// if replace is passed in then we want to replace the previous mode with the new mode\n    if (replace) {\n\t\t\t// set history using previous state minus the last entry, then append the new mode\n      setHistory(prev => [...prev.slice(0, -1), newMode])\n    } else {\n\t\t\t// otherwise just append the new mode to the previous state as normal\n      setHistory(prev => [...prev, newMode])\n    }\n  }\n\n\t// a function for returning to the previous history state\n  function back () {\n\t\t// check if the array has more than one entry\n    if (history.length > 1) {\n\t\t\t// then set the current mode to the previous entry\n      setMode(history[history.length - 2])\n    } else {\n\t\t\t// otherwise set the current mode to the first (and only) entry in history\n\t\t\t// this is mostly error catching, but it could happen when using replace = true in transition incorrectly\n      setMode(history[0])\n    }\n\n\t\t// set the history using the previous history minus the last entry\n    setHistory(prev => [...prev.slice(0, -1)])\n  }\n\n\t// return the functions so they can be used in the application\n  return { mode, transition, back }\n}\n","import React from 'react'\nimport useApplicationData from 'hooks/useApplicationData'\nimport 'components/Application.scss'\nimport DayList from 'components/DayList'\nimport Appointment from './Appointment'\nimport {\n\tgetAppointmentsForDay,\n\tgetInterview,\n\tgetInterviewersForDay\n} from 'helpers/selectors'\n\nexport default function Application (props) {\n  const {\n\t\tstate,\n\t\tsetDay,\n\t\tbookInterview,\n\t\tcancelInterview\n\t} = useApplicationData()\n\n\t// grab the appointments for the current day\n  const appointments = getAppointmentsForDay(state, state.day)\n\n\t// set a schedule variable to the map of appointments for the day\n  const schedule = appointments.map(appointment => {\n\t\t// grab the interview for the day, or null if there isn't one\n    const interview = getInterview(state, appointment.interview)\n\t\t// grab the interviewers for the day or an empty array if it can't find them\n    const interviewers = getInterviewersForDay(state, state.day)\n\n\t\t// return an Appointment html render\n    return (\n      <Appointment\n        key={appointment.id}\n        id={appointment.id}\n        time={appointment.time}\n        interview={interview}\n        interviewers={interviewers}\n        bookInterview={bookInterview}\n        cancelInterview={cancelInterview}\n\t\t\t/>\n    )\n  })\n\n  return (\n    <main className='layout'>\n      <section className='sidebar'>\n        <img\n          className='sidebar--centered'\n          src='images/logo.png'\n          alt='Interview Scheduler'\n\t\t\t\t/>\n        <hr className='sidebar__separator sidebar--centered' />\n        <nav className='sidebar__menu'>\n          {/* render the days menu */}\n          <DayList days={state.days} value={state.day} onChange={setDay} />\n        </nav>\n        <img\n          className='sidebar__lhl sidebar--centered'\n          src='images/lhl.png'\n          alt='Lighthouse Labs'\n\t\t\t\t/>\n      </section>\n      <section className='schedule'>\n        {/* pass in the schedule variable created above that renders Appointments */}\n        {schedule}\n        <Appointment key='last' time='5pm' />\n      </section>\n    </main>\n  )\n}\n","import { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nimport 'components/Application.scss'\n\nexport default function useApplicationData () {\n\t// assign state and setState variables\n  const [state, setState] = useState({\n    day: 'Monday',\n    days: [],\n    appointments: {},\n    interviewers: {}\n  })\n\n\t// create a function for setDay that sets the state\n  const setDay = day => setState({ ...state, day })\n\n\t// grab the data from the API server asyncronously\n  useEffect(() => {\n    Promise.all([\n      axios.get('/api/days'),\n      axios.get('/api/appointments'),\n      axios.get('/api/interviewers')\n    ]).then(all => {\n      setState(prev => ({\n        ...prev,\n        days: all[0].data,\n        appointments: all[1].data,\n        interviewers: all[2].data\n      }))\n    })\n  }, [])\n\n\t// function for updating the spots every time an inteview is created, edited, or deleted\n\t// takes add as a boolean value that tells us whether to add or remove a spot\n  function updateSpots (add) {\n\t\t// map the days\n    const days = state.days.map(day => {\n\t\t\t// find the day that matches\n      if (day.name === state.day) {\n\t\t\t\t// if add is true\n        if (add) {\n\t\t\t\t\t// then add a spot to that day\n          return { ...day, spots: day.spots + 1 }\n        } else {\n\t\t\t\t\t// otherwise subtract a spot from that day\n          return { ...day, spots: day.spots - 1 }\n        }\n      } else {\n\t\t\t\t// error catching in case the day is not found return the entire day state\n        return { ...day }\n      }\n    })\n\n\t\t// return the days state\n    return days\n  }\n\n\t// a function called when we create or edit an interview\n\t// takes the appointment id and the interview object as parameters\n  function bookInterview (id, interview) {\n\t\t// set up an appointment object with the data passed in to bookInterview\n    const appointment = {\n      ...state.appointments[id],\n      interview: { ...interview }\n    }\n\n\t\t// add the newly made appointment object to an appointments variable that uses the current state\n    const appointments = {\n      ...state.appointments,\n      [id]: appointment\n    }\n\n\t\t// make a put axios call\n    const promise = axios\n\t\t\t.put('/api/appointments/' + id, { interview })\n\t\t\t.then(res => {\n\t\t\t\t// call updateSpots and store the days state\n  const days = updateSpots()\n\t\t\t\t// set the state using the updated appointments and days states\n  setState(prev => ({ ...prev, appointments, days }))\n})\n\n\t\t// the promise is returned to the queueSave function in src/components/Appointment/index.js\n\t\t// so that it can run additional local functions before resolving\n    return promise\n  }\n\n\t// a function for cancelling interviews, called when an interview is deleted\n\t// takes an appointment id as an argument\n  function cancelInterview (id) {\n    const appointment = {\n      ...state.appointments[id],\n      interview: null\n    }\n\t\t// setup an appointment object using the current state,\n\t\t// but set the id passed in to null\n    const appointments = {\n      ...state.appointments,\n      [id]: appointment\n    }\n\n\t\t// create an axios delete request promise\n    const promise = axios.delete('/api/appointments/' + id).then(res => {\n\t\t\t// create a days state by calling updateSpots with true as an argument because we want to add a spot\n      const days = updateSpots(true)\n\t\t\t// set the state using previous state plus the appointment and days states created locally\n      setState(prev => ({ ...prev, appointments, days }))\n    })\n\n\t\t// return the axios promise to the queueDelete function in src/components/Appointment/index.js\n\t\t// to be resolved there so that it can run local transition functions\n    return promise\n  }\n\n  return { state, setDay, bookInterview, cancelInterview }\n}\n","// a function for getting all of the appointments for a specific day\nexport function getAppointmentsForDay (state, day) {\n\t// get the current day by searching state\n  const currentDay = state.days.find(stateDay => stateDay.name === day)\n\n\t// error catching in case the current day doesn't exist return an empty array\n  if (!currentDay) {\n    return []\n  }\n\n\t// set the results equal to a map of the day's appointments from state\n  const results = currentDay.appointments.map(\n\t\tappointment => state.appointments[appointment]\n\t)\n\n\t// return the results array\n  return results\n}\n\n// a function for getting a specific interview\nexport function getInterview (state, interviewer) {\n\t// filter state.interviewers\n  const results = Object.values(state.interviewers).filter(stateInterviewer => {\n\t\t// check that the filtered result isn't null and the interviewer argument isn't null\n    if (stateInterviewer !== null && interviewer !== null) {\n\t\t\t//  return true or false whether the filtered interviewer is the same interviewer that was passed in as an argument\n      return stateInterviewer.id === interviewer.interviewer\n    }\n\t\t// otherwise return null\n    return null\n  })\n\n\t// if nothing was returned from the filter, return null\n  if (results.length === 0) {\n    return null\n  }\n\n\t// otherwise return a new object containing interview data\n  return { interviewer: results[0], student: interviewer.student }\n}\n\n// get all the interviewers for a given day\nexport function getInterviewersForDay (state, day_name) {\n\t// get the current day from state\n  const currentDay = state.days.find(day => day.name === day_name)\n\n\t// error checking if the current day doesn't exist or the current day doesn't have any interviewers assigned\n  if (!currentDay || !currentDay.interviewers) {\n\t\t// then return an empty array\n    return []\n  }\n\n\t// otherwise, map the current day's interviewers to results\n  const results = currentDay.interviewers.map(\n\t\tinterviewer => state.interviewers[interviewer]\n\t)\n\n\t// and return results\n  return results\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"index.scss\";\n\nimport Application from \"components/Application\";\n\nReactDOM.render(<Application />, document.getElementById(\"root\"));\n"],"sourceRoot":""}